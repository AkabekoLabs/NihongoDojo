"""
Sample augmentation module for Nihongo DoJo
各タスクタイプのサンプル数を増幅するためのデータ拡張モジュール
"""

from typing import Dict, List, Tuple
from ..core import TaskDifficulty
import random


class TaskSampleAugmenter:
    """タスクサンプルの増幅を行うクラス"""
    
    @staticmethod
    def get_augmented_grammar_patterns() -> Dict[TaskDifficulty, List[Dict]]:
        """拡張された文法パターンを取得"""
        return {
            TaskDifficulty.BEGINNER: [
                {
                    "pattern": "〜ています（進行形・状態）",
                    "examples": [
                        ("incorrect", "私は本を読みます。", "私は本を読んでいます。", "現在進行形"),
                        ("incorrect", "彼は寝ます。", "彼は寝ています。", "継続状態"),
                        ("incorrect", "電車が来ます。", "電車が来ています。", "到着状態"),
                        ("incorrect", "ドアが開きます。", "ドアが開いています。", "結果状態"),
                        ("incorrect", "雨が降ります。", "雨が降っています。", "現在進行形"),
                        ("incorrect", "子供が遊びます。", "子供が遊んでいます。", "現在進行形"),
                        ("incorrect", "花が咲きます。", "花が咲いています。", "結果状態"),
                        ("incorrect", "店が閉まります。", "店が閉まっています。", "結果状態"),
                        ("incorrect", "猫が座ります。", "猫が座っています。", "継続状態"),
                        ("incorrect", "パソコンが壊れます。", "パソコンが壊れています。", "結果状態")
                    ]
                },
                {
                    "pattern": "〜たい（願望）",
                    "examples": [
                        ("incorrect", "私は日本に行きます。", "私は日本に行きたいです。", "願望"),
                        ("incorrect", "寿司を食べます。", "寿司を食べたいです。", "願望"),
                        ("incorrect", "新しい車を買います。", "新しい車を買いたいです。", "願望"),
                        ("incorrect", "友達に会います。", "友達に会いたいです。", "願望"),
                        ("incorrect", "映画を見ます。", "映画を見たいです。", "願望"),
                        ("incorrect", "旅行をします。", "旅行をしたいです。", "願望"),
                        ("incorrect", "ゆっくり休みます。", "ゆっくり休みたいです。", "願望"),
                        ("incorrect", "美味しいものを食べます。", "美味しいものを食べたいです。", "願望"),
                        ("incorrect", "音楽を聞きます。", "音楽を聞きたいです。", "願望"),
                        ("incorrect", "写真を撮ります。", "写真を撮りたいです。", "願望")
                    ]
                },
                {
                    "pattern": "〜ましょう（勧誘）",
                    "examples": [
                        ("incorrect", "一緒に行きます。", "一緒に行きましょう。", "勧誘"),
                        ("incorrect", "昼ごはんを食べます。", "昼ごはんを食べましょう。", "勧誘"),
                        ("incorrect", "休憩します。", "休憩しましょう。", "勧誘"),
                        ("incorrect", "公園で遊びます。", "公園で遊びましょう。", "勧誘"),
                        ("incorrect", "お茶を飲みます。", "お茶を飲みましょう。", "勧誘"),
                        ("incorrect", "買い物に行きます。", "買い物に行きましょう。", "勧誘"),
                        ("incorrect", "勉強します。", "勉強しましょう。", "勧誘"),
                        ("incorrect", "歌を歌います。", "歌を歌いましょう。", "勧誘")
                    ]
                },
                {
                    "pattern": "〜てください（依頼）",
                    "examples": [
                        ("incorrect", "ここに座ります。", "ここに座ってください。", "依頼"),
                        ("incorrect", "静かにします。", "静かにしてください。", "依頼"),
                        ("incorrect", "ドアを閉めます。", "ドアを閉めてください。", "依頼"),
                        ("incorrect", "名前を書きます。", "名前を書いてください。", "依頼"),
                        ("incorrect", "少し待ちます。", "少し待ってください。", "依頼"),
                        ("incorrect", "もう一度言います。", "もう一度言ってください。", "依頼"),
                        ("incorrect", "窓を開けます。", "窓を開けてください。", "依頼"),
                        ("incorrect", "ゆっくり話します。", "ゆっくり話してください。", "依頼")
                    ]
                }
            ],
            TaskDifficulty.INTERMEDIATE: [
                {
                    "pattern": "〜ことができる（可能）",
                    "examples": [
                        ("incorrect", "日本語を話す。", "日本語を話すことができます。", "能力"),
                        ("incorrect", "漢字を読む。", "漢字を読むことができます。", "能力"),
                        ("incorrect", "車を運転する。", "車を運転することができます。", "能力"),
                        ("incorrect", "泳ぐ。", "泳ぐことができます。", "能力"),
                        ("incorrect", "料理を作る。", "料理を作ることができます。", "能力"),
                        ("incorrect", "ピアノを弾く。", "ピアノを弾くことができます。", "能力"),
                        ("incorrect", "写真を撮る。", "写真を撮ることができます。", "許可"),
                        ("incorrect", "ここで休む。", "ここで休むことができます。", "許可"),
                        ("incorrect", "クレジットカードで払う。", "クレジットカードで払うことができます。", "可能"),
                        ("incorrect", "オンラインで予約する。", "オンラインで予約することができます。", "可能")
                    ]
                },
                {
                    "pattern": "〜なければならない（義務）",
                    "examples": [
                        ("incorrect", "宿題をする。", "宿題をしなければなりません。", "義務"),
                        ("incorrect", "早く起きる。", "早く起きなければなりません。", "義務"),
                        ("incorrect", "薬を飲む。", "薬を飲まなければなりません。", "義務"),
                        ("incorrect", "会議に出席する。", "会議に出席しなければなりません。", "義務"),
                        ("incorrect", "レポートを提出する。", "レポートを提出しなければなりません。", "義務"),
                        ("incorrect", "規則を守る。", "規則を守らなければなりません。", "義務"),
                        ("incorrect", "時間を守る。", "時間を守らなければなりません。", "義務"),
                        ("incorrect", "マスクをつける。", "マスクをつけなければなりません。", "義務"),
                        ("incorrect", "パスポートを持つ。", "パスポートを持たなければなりません。", "義務"),
                        ("incorrect", "申請書を書く。", "申請書を書かなければなりません。", "義務")
                    ]
                },
                {
                    "pattern": "〜そうです（様態）",
                    "examples": [
                        ("incorrect", "雨が降る。", "雨が降りそうです。", "様態推測"),
                        ("incorrect", "美味しい。", "美味しそうです。", "様態推測"),
                        ("incorrect", "楽しい。", "楽しそうです。", "様態推測"),
                        ("incorrect", "難しい。", "難しそうです。", "様態推測"),
                        ("incorrect", "忙しい。", "忙しそうです。", "様態推測"),
                        ("incorrect", "疲れる。", "疲れそうです。", "様態推測"),
                        ("incorrect", "壊れる。", "壊れそうです。", "様態推測"),
                        ("incorrect", "泣く。", "泣きそうです。", "様態推測")
                    ]
                },
                {
                    "pattern": "〜ようになる（変化）",
                    "examples": [
                        ("incorrect", "日本語を話す。", "日本語が話せるようになりました。", "能力の変化"),
                        ("incorrect", "野菜を食べる。", "野菜を食べるようになりました。", "習慣の変化"),
                        ("incorrect", "早起きする。", "早起きするようになりました。", "習慣の変化"),
                        ("incorrect", "泳ぐ。", "泳げるようになりました。", "能力の変化"),
                        ("incorrect", "漢字を読む。", "漢字が読めるようになりました。", "能力の変化"),
                        ("incorrect", "毎日運動する。", "毎日運動するようになりました。", "習慣の変化"),
                        ("incorrect", "自転車に乗る。", "自転車に乗れるようになりました。", "能力の変化"),
                        ("incorrect", "朝ごはんを食べる。", "朝ごはんを食べるようになりました。", "習慣の変化")
                    ]
                }
            ],
            TaskDifficulty.ADVANCED: [
                {
                    "pattern": "〜ばかりでなく〜も（累加）",
                    "examples": [
                        ("incorrect", "英語を話す。フランス語も話す。", "英語を話すばかりでなく、フランス語も話します。", "累加"),
                        ("incorrect", "頭がいい。スポーツもできる。", "頭がいいばかりでなく、スポーツもできます。", "累加"),
                        ("incorrect", "安い。品質もいい。", "安いばかりでなく、品質もいいです。", "累加"),
                        ("incorrect", "仕事が速い。正確だ。", "仕事が速いばかりでなく、正確です。", "累加"),
                        ("incorrect", "親切だ。面白い。", "親切なばかりでなく、面白いです。", "累加"),
                        ("incorrect", "経験がある。資格も持っている。", "経験があるばかりでなく、資格も持っています。", "累加")
                    ]
                },
                {
                    "pattern": "〜にもかかわらず（逆接）",
                    "examples": [
                        ("incorrect", "雨が降っている。試合は続行された。", "雨が降っているにもかかわらず、試合は続行された。", "逆接"),
                        ("incorrect", "高い。よく売れている。", "高いにもかかわらず、よく売れている。", "逆接"),
                        ("incorrect", "忙しい。手伝ってくれた。", "忙しいにもかかわらず、手伝ってくれた。", "逆接"),
                        ("incorrect", "若い。経験豊富だ。", "若いにもかかわらず、経験豊富だ。", "逆接"),
                        ("incorrect", "難しい。人気がある。", "難しいにもかかわらず、人気がある。", "逆接"),
                        ("incorrect", "遠い。毎日通っている。", "遠いにもかかわらず、毎日通っている。", "逆接")
                    ]
                },
                {
                    "pattern": "〜というより（比較・訂正）",
                    "examples": [
                        ("incorrect", "彼は先生だ。研究者だ。", "彼は先生というより研究者だ。", "比較"),
                        ("incorrect", "疲れた。眠い。", "疲れたというより眠い。", "比較"),
                        ("incorrect", "難しい。面倒だ。", "難しいというより面倒だ。", "比較"),
                        ("incorrect", "驚いた。感動した。", "驚いたというより感動した。", "比較")
                    ]
                }
            ]
        }
    
    @staticmethod
    def get_augmented_particle_examples() -> Dict[TaskDifficulty, List[Tuple]]:
        """拡張された助詞の例を取得"""
        return {
            TaskDifficulty.BEGINNER: [
                ("私＿学校＿行きます。", ["は", "に"], "主題と方向"),
                ("友達＿手紙＿書きました。", ["に", "を"], "対象と目的語"),
                ("部屋＿テレビ＿あります。", ["に", "が"], "場所と存在"),
                ("毎朝７時＿起きます。", ["に"], "時間"),
                ("日本＿来ました。", ["に"], "到着点"),
                ("バス＿学校＿行きます。", ["で", "に"], "手段と方向"),
                ("本＿読みます。", ["を"], "目的語"),
                ("友達＿会いました。", ["に"], "相手"),
                ("家＿帰ります。", ["に"], "方向"),
                ("電車＿乗ります。", ["に"], "対象"),
                ("公園＿遊びます。", ["で"], "場所"),
                ("ペン＿書きます。", ["で"], "道具"),
                ("朝ごはん＿食べました。", ["を"], "目的語"),
                ("猫＿好きです。", ["が"], "対象"),
                ("ここ＿座ってください。", ["に"], "場所")
            ],
            TaskDifficulty.INTERMEDIATE: [
                ("仕事＿終わってから、友達＿会います。", ["が", "と"], "主語と相手"),
                ("雨＿降っているので、傘＿持っていきます。", ["が", "を"], "主語と目的語"),
                ("この問題＿ついて話し合いましょう。", ["に"], "話題"),
                ("彼＿よって意見が違います。", ["に"], "基準"),
                ("試験＿合格しました。", ["に"], "対象"),
                ("友達＿プレゼント＿もらいました。", ["から", "を"], "起点と目的語"),
                ("会議＿参加します。", ["に"], "対象"),
                ("日本語＿興味があります。", ["に"], "対象"),
                ("電話＿話しています。", ["で"], "手段"),
                ("結果＿満足しています。", ["に"], "対象"),
                ("彼女＿頼みました。", ["に"], "相手"),
                ("問題＿ぶつかりました。", ["に"], "対象"),
                ("計画＿従って進めます。", ["に"], "基準"),
                ("目的＿向かって努力します。", ["に"], "方向")
            ],
            TaskDifficulty.ADVANCED: [
                ("彼＿とって、これは重要な決定だ。", ["に"], "立場"),
                ("状況＿応じて対応を変える。", ["に"], "基準"),
                ("期待＿反して結果は良くなかった。", ["に"], "対比"),
                ("計画＿沿って実行する。", ["に"], "基準"),
                ("立場＿立って考える。", ["に"], "視点"),
                ("原則＿則って判断する。", ["に"], "基準"),
                ("事実＿基づいて説明する。", ["に"], "根拠"),
                ("要望＿応えて改善した。", ["に"], "対応")
            ]
        }
    
    @staticmethod
    def get_augmented_keigo_examples() -> Dict[TaskDifficulty, List[Dict]]:
        """拡張された敬語の例を取得"""
        return {
            TaskDifficulty.INTERMEDIATE: [
                {
                    "plain": "食べる",
                    "sonkeigo": "召し上がる",
                    "kenjougo": "いただく",
                    "teineigo": "食べます"
                },
                {
                    "plain": "見る",
                    "sonkeigo": "ご覧になる",
                    "kenjougo": "拝見する",
                    "teineigo": "見ます"
                },
                {
                    "plain": "言う",
                    "sonkeigo": "おっしゃる",
                    "kenjougo": "申し上げる",
                    "teineigo": "言います"
                },
                {
                    "plain": "行く",
                    "sonkeigo": "いらっしゃる",
                    "kenjougo": "参る",
                    "teineigo": "行きます"
                },
                {
                    "plain": "来る",
                    "sonkeigo": "いらっしゃる",
                    "kenjougo": "参る",
                    "teineigo": "来ます"
                },
                {
                    "plain": "する",
                    "sonkeigo": "なさる",
                    "kenjougo": "いたす",
                    "teineigo": "します"
                },
                {
                    "plain": "聞く",
                    "sonkeigo": "お聞きになる",
                    "kenjougo": "伺う",
                    "teineigo": "聞きます"
                },
                {
                    "plain": "読む",
                    "sonkeigo": "お読みになる",
                    "kenjougo": "拝読する",
                    "teineigo": "読みます"
                },
                {
                    "plain": "会う",
                    "sonkeigo": "お会いになる",
                    "kenjougo": "お目にかかる",
                    "teineigo": "会います"
                },
                {
                    "plain": "待つ",
                    "sonkeigo": "お待ちになる",
                    "kenjougo": "お待ちする",
                    "teineigo": "待ちます"
                }
            ],
            TaskDifficulty.ADVANCED: [
                {
                    "plain": "知っている",
                    "sonkeigo": "ご存知である",
                    "kenjougo": "存じ上げる",
                    "teineigo": "知っています"
                },
                {
                    "plain": "もらう",
                    "sonkeigo": "お受け取りになる",
                    "kenjougo": "頂戴する",
                    "teineigo": "もらいます"
                },
                {
                    "plain": "思う",
                    "sonkeigo": "お思いになる",
                    "kenjougo": "存じる",
                    "teineigo": "思います"
                },
                {
                    "plain": "いる",
                    "sonkeigo": "いらっしゃる",
                    "kenjougo": "おる",
                    "teineigo": "います"
                },
                {
                    "plain": "訪ねる",
                    "sonkeigo": "お訪ねになる",
                    "kenjougo": "伺う",
                    "teineigo": "訪ねます"
                },
                {
                    "plain": "借りる",
                    "sonkeigo": "お借りになる",
                    "kenjougo": "拝借する",
                    "teineigo": "借ります"
                },
                {
                    "plain": "教える",
                    "sonkeigo": "お教えになる",
                    "kenjougo": "お教えする",
                    "teineigo": "教えます"
                },
                {
                    "plain": "送る",
                    "sonkeigo": "お送りになる",
                    "kenjougo": "お送りする",
                    "teineigo": "送ります"
                }
            ]
        }
    
    @staticmethod
    def get_augmented_word_order_examples() -> Dict[TaskDifficulty, List[Tuple]]:
        """拡張された語順の例を取得"""
        return {
            TaskDifficulty.BEGINNER: [
                (["私は", "毎日", "学校に", "行きます"], "基本的な語順"),
                (["昨日", "友達と", "映画を", "見ました"], "過去の行動"),
                (["明日", "図書館で", "勉強します"], "未来の予定"),
                (["今朝", "パンを", "食べました"], "時間と行動"),
                (["駅で", "友達に", "会いました"], "場所と行動"),
                (["日本語を", "三年間", "勉強しています"], "期間の表現"),
                (["お母さんに", "プレゼントを", "あげました"], "授受の表現"),
                (["コーヒーを", "飲みながら", "新聞を", "読みます"], "同時進行"),
                (["電車に", "乗って", "会社に", "行きます"], "移動手段"),
                (["宿題を", "してから", "寝ます"], "順序の表現")
            ],
            TaskDifficulty.INTERMEDIATE: [
                (["その本は", "とても", "面白かったので", "友達に", "貸しました"], "理由と結果"),
                (["雨が", "降っていたけど", "試合は", "続けられました"], "逆接"),
                (["もし", "時間が", "あれば", "一緒に", "行きましょう"], "条件"),
                (["彼女は", "英語も", "フランス語も", "話せます"], "並列"),
                (["会議が", "終わってから", "レポートを", "書きます"], "時間的順序"),
                (["日本に", "来てから", "もう", "三年に", "なります"], "経過時間"),
                (["この問題について", "みんなで", "話し合いましょう"], "話題提示"),
                (["彼は", "医者に", "なるために", "勉強しています"], "目的"),
                (["天気が", "良ければ", "公園で", "ピクニックを", "します"], "条件と結果"),
                (["仕事を", "終えてから", "買い物に", "行きました"], "順序")
            ],
            TaskDifficulty.ADVANCED: [
                (["その提案については", "慎重に", "検討する", "必要が", "あります"], "フォーマルな表現"),
                (["経済状況を", "考慮に入れて", "計画を", "立てるべきです"], "複雑な条件"),
                (["彼の意見に", "賛成する人も", "反対する人も", "います"], "対比"),
                (["この問題を", "解決するためには", "皆の", "協力が", "不可欠です"], "必要性"),
                (["データを", "分析した結果", "新しい", "傾向が", "見つかりました"], "結果の提示")
            ]
        }
    
    @staticmethod
    def get_augmented_translation_examples() -> Dict[TaskDifficulty, List[Tuple]]:
        """拡張された翻訳の例を取得"""
        return {
            TaskDifficulty.BEGINNER: [
                ("おはようございます", "Good morning", "朝の挨拶"),
                ("ありがとう", "Thank you", "感謝"),
                ("すみません", "Excuse me", "謝罪・呼びかけ"),
                ("いただきます", "Let's eat (before meal)", "食前の挨拶"),
                ("ごちそうさまでした", "Thank you for the meal", "食後の挨拶"),
                ("さようなら", "Goodbye", "別れの挨拶"),
                ("おやすみなさい", "Good night", "就寝前の挨拶"),
                ("はじめまして", "Nice to meet you", "初対面の挨拶"),
                ("どういたしまして", "You're welcome", "感謝への返答"),
                ("お元気ですか", "How are you?", "安否の確認"),
                ("今日は暑いですね", "It's hot today", "天気の話"),
                ("これはいくらですか", "How much is this?", "値段を聞く")
            ],
            TaskDifficulty.INTERMEDIATE: [
                ("お忙しいところ申し訳ありません", "I'm sorry to bother you when you're busy", "ビジネス"),
                ("ご連絡ありがとうございます", "Thank you for contacting me", "ビジネス"),
                ("お手数をおかけしますが", "I'm sorry for the trouble, but", "依頼"),
                ("よろしくお願いします", "Please take care of it / Nice to meet you", "依頼・挨拶"),
                ("お疲れ様でした", "Thank you for your hard work", "労い"),
                ("申し訳ございません", "I'm terribly sorry", "丁寧な謝罪"),
                ("恐れ入りますが", "I'm sorry to trouble you, but", "丁寧な依頼"),
                ("ご確認ください", "Please confirm", "確認依頼"),
                ("承知いたしました", "I understand", "了解"),
                ("お待たせしました", "Sorry to keep you waiting", "待たせた際の謝罪")
            ],
            TaskDifficulty.ADVANCED: [
                ("誠に恐縮ですが", "I'm truly sorry to impose, but", "非常に丁寧な依頼"),
                ("心より感謝申し上げます", "I express my heartfelt gratitude", "深い感謝"),
                ("ご高配を賜り", "Thank you for your kind consideration", "配慮への感謝"),
                ("お力添えいただければ幸いです", "I would appreciate your assistance", "協力依頼"),
                ("ご検討のほどよろしくお願いいたします", "Please give this your consideration", "検討依頼"),
                ("お取り計らいください", "Please handle this matter", "処理依頼")
            ]
        }
    
    @staticmethod
    def get_augmented_counter_examples() -> Dict[TaskDifficulty, List[Tuple]]:
        """拡張された助数詞の例を取得"""
        return {
            TaskDifficulty.BEGINNER: [
                ("人", [("一人", "ひとり"), ("二人", "ふたり"), ("三人", "さんにん"), ("四人", "よにん"), ("五人", "ごにん")]),
                ("本", [("一本", "いっぽん"), ("二本", "にほん"), ("三本", "さんぼん"), ("四本", "よんほん"), ("五本", "ごほん")]),
                ("枚", [("一枚", "いちまい"), ("二枚", "にまい"), ("三枚", "さんまい"), ("四枚", "よんまい"), ("五枚", "ごまい")]),
                ("個", [("一個", "いっこ"), ("二個", "にこ"), ("三個", "さんこ"), ("四個", "よんこ"), ("五個", "ごこ")]),
                ("冊", [("一冊", "いっさつ"), ("二冊", "にさつ"), ("三冊", "さんさつ"), ("四冊", "よんさつ"), ("五冊", "ごさつ")]),
                ("台", [("一台", "いちだい"), ("二台", "にだい"), ("三台", "さんだい"), ("四台", "よんだい"), ("五台", "ごだい")]),
                ("匹", [("一匹", "いっぴき"), ("二匹", "にひき"), ("三匹", "さんびき"), ("四匹", "よんひき"), ("五匹", "ごひき")]),
                ("つ", [("一つ", "ひとつ"), ("二つ", "ふたつ"), ("三つ", "みっつ"), ("四つ", "よっつ"), ("五つ", "いつつ")]),
                ("杯", [("一杯", "いっぱい"), ("二杯", "にはい"), ("三杯", "さんばい"), ("四杯", "よんはい"), ("五杯", "ごはい")]),
                ("回", [("一回", "いっかい"), ("二回", "にかい"), ("三回", "さんかい"), ("四回", "よんかい"), ("五回", "ごかい")])
            ],
            TaskDifficulty.INTERMEDIATE: [
                ("軒", [("一軒", "いっけん"), ("二軒", "にけん"), ("三軒", "さんげん"), ("四軒", "よんけん"), ("五軒", "ごけん")]),
                ("頭", [("一頭", "いっとう"), ("二頭", "にとう"), ("三頭", "さんとう"), ("四頭", "よんとう"), ("五頭", "ごとう")]),
                ("羽", [("一羽", "いちわ"), ("二羽", "にわ"), ("三羽", "さんわ"), ("四羽", "よんわ"), ("五羽", "ごわ")]),
                ("足", [("一足", "いっそく"), ("二足", "にそく"), ("三足", "さんぞく"), ("四足", "よんそく"), ("五足", "ごそく")]),
                ("階", [("一階", "いっかい"), ("二階", "にかい"), ("三階", "さんがい"), ("四階", "よんかい"), ("五階", "ごかい")]),
                ("番", [("一番", "いちばん"), ("二番", "にばん"), ("三番", "さんばん"), ("四番", "よんばん"), ("五番", "ごばん")]),
                ("組", [("一組", "ひとくみ"), ("二組", "ふたくみ"), ("三組", "さんくみ"), ("四組", "よんくみ"), ("五組", "ごくみ")]),
                ("通", [("一通", "いっつう"), ("二通", "につう"), ("三通", "さんつう"), ("四通", "よんつう"), ("五通", "ごつう")])
            ]
        }


def augment_task_class(task_class_name: str, augmenter_method_name: str):
    """
    タスククラスのサンプルデータを増幅する
    
    Args:
        task_class_name: 増幅するタスククラス名
        augmenter_method_name: TaskSampleAugmenterのメソッド名
    """
    augmenter = TaskSampleAugmenter()
    augmented_data = getattr(augmenter, augmenter_method_name)()
    
    # ここで実際のタスククラスにデータを注入する処理を実装
    # 例: task_class.data = augmented_data
    
    return augmented_data